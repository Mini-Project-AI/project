name: Vercel Preview Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
on:
  push:
    branches-ignore:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  Deploy-Preview:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        id: vercel-deploy
        run: |
          output=$(vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }})
          preview_url=$(echo $output | grep -o "Preview: https://[^\"]*")
          preview_url=${preview_url#*Preview: }
          echo "::set-output name=preview_url::$preview_url"

      - name: Post Preview URL to PR
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const context = github.context;
            const previewUrl = process.env.PREVIEW_URL;
            const issueComment = `Preview URL: ${previewUrl}`;
            await github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: issueComment
            });
